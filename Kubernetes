📦 Kubernetes Architecture – Simple Explanation

This document explains the basic architecture of Kubernetes in simple words, covering both master (control plane) and worker nodes, along with their key components.

🧠 Master Node (Control Plane)

The master node is the brain of the Kubernetes cluster. It controls and manages everything that happens in the system.

🔹 Components:

API Server

The main entry point for all requests.

Every command (from users or tools like kubectl) first goes through the API server.

Scheduler

Decides which worker node will run a new application (pod).

It checks resource availability and assigns the task.

Controller Manager

Watches the cluster to make sure all apps (pods) are running as expected.

If something fails, it tries to fix it automatically (e.g., restart a pod).

etcd

A lightweight key-value database.

Stores the entire state of the Kubernetes cluster, including configurations and current status.

⚙️ Worker Node

The worker nodes are the machines where your applications actually run inside containers.

🔹 Components:

Container Runtime

Software like Docker or containerd that runs your application inside containers.

kube-proxy

Manages networking.

Assigns IPs and helps pods talk to each other and to the outside world.

kubelet

An agent that runs on each worker node.

It receives instructions from the master (API server), runs the containers (pods), and reports back the status.

🔁 Summary Table
Component	Node Type	Description
API Server	Master	Handles all incoming requests
Scheduler	Master	Chooses where to run new pods
Controller Manager	Master	Keeps the system healthy
etcd	Master	Stores cluster state and config
Container Runtime	Worker	Runs app containers
kube-proxy	Worker	Manages networking and IPs
kubelet	Worker	Runs pods and talks to master
